# Generated by Django 4.2.23 on 2025-09-05 17:11

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('phone', models.CharField(max_length=20, unique=True, verbose_name='رقم الجوال')),
                ('national_id', models.CharField(blank=True, max_length=20, null=True, unique=True, verbose_name='الهوية الوطنية')),
                ('name', models.CharField(db_index=True, max_length=150, verbose_name='الاسم')),
                ('is_active', models.BooleanField(default=True, verbose_name='نشط')),
                ('is_staff', models.BooleanField(default=False, verbose_name='موظّف لوحة')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الانضمام')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'مستخدم (معلم)',
                'verbose_name_plural': 'المستخدمون',
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, verbose_name='اسم القسم')),
                ('slug', models.SlugField(max_length=64, unique=True, verbose_name='المعرّف (slug)')),
                ('role_label', models.CharField(blank=True, help_text='إن تُرك فارغًا سيُستخدم اسم القسم.', max_length=120, verbose_name='الاسم الظاهر في قائمة (الدور)')),
                ('is_active', models.BooleanField(default=True, verbose_name='نشط')),
            ],
            options={
                'verbose_name': 'قسم',
                'verbose_name_plural': 'الأقسام',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='ReportType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.SlugField(max_length=40, unique=True, verbose_name='الكود')),
                ('name', models.CharField(max_length=120, verbose_name='الاسم')),
                ('description', models.TextField(blank=True, verbose_name='الوصف')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='الترتيب')),
                ('is_active', models.BooleanField(default=True, verbose_name='نشط')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='أُنشئ')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تحديث')),
            ],
            options={
                'verbose_name': 'نوع تقرير',
                'verbose_name_plural': 'أنواع التقارير',
                'ordering': ('order', 'name'),
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='عنوان الطلب')),
                ('body', models.TextField(blank=True, null=True, verbose_name='تفاصيل الطلب')),
                ('attachment', models.FileField(blank=True, null=True, upload_to='tickets/', validators=[django.core.validators.FileExtensionValidator(['pdf', 'jpg', 'jpeg', 'png', 'doc', 'docx'])], verbose_name='مرفق')),
                ('status', models.CharField(choices=[('open', 'جديد'), ('in_progress', 'قيد المعالجة'), ('done', 'مكتمل'), ('rejected', 'مرفوض')], db_index=True, default='open', max_length=20, verbose_name='الحالة')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='تاريخ الإنشاء')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاريخ التحديث')),
                ('assignee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tickets_assigned', to=settings.AUTH_USER_MODEL, verbose_name='المستلم')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tickets_created', to=settings.AUTH_USER_MODEL, verbose_name='المرسل')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tickets', to='reports.department', verbose_name='القسم')),
            ],
            options={
                'verbose_name': 'طلب',
                'verbose_name_plural': 'الطلبات',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TicketNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField(verbose_name='الملاحظة')),
                ('is_public', models.BooleanField(default=True, verbose_name='ظاهرة للمرسل؟')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإضافة')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ticket_notes', to=settings.AUTH_USER_MODEL, verbose_name='كاتب الملاحظة')),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='reports.ticket', verbose_name='التذكرة')),
            ],
            options={
                'verbose_name': 'ملاحظة طلب',
                'verbose_name_plural': 'ملاحظات الطلبات',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=64, unique=True, verbose_name='المعرّف (slug)')),
                ('name', models.CharField(max_length=120, verbose_name='الاسم')),
                ('is_staff_by_default', models.BooleanField(default=False, verbose_name='يمتلك لوحة التحكم افتراضيًا؟')),
                ('can_view_all_reports', models.BooleanField(default=False, verbose_name='يشاهد كل التصنيفات؟')),
                ('is_active', models.BooleanField(default=True, verbose_name='نشط')),
                ('allowed_reporttypes', models.ManyToManyField(blank=True, related_name='roles_allowed', to='reports.reporttype', verbose_name='الأنواع المسموح بها')),
            ],
            options={
                'verbose_name': 'دور',
                'verbose_name_plural': 'الأدوار',
                'ordering': ('slug',),
            },
        ),
        migrations.CreateModel(
            name='RequestTicket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.CharField(choices=[('manager', 'المدير'), ('activity_officer', 'مسؤول النشاط'), ('volunteer_officer', 'مسؤول التطوع'), ('affairs_officer', 'مسؤول الشؤون المدرسية'), ('admin_officer', 'مسؤول الشؤون الإدارية')], db_index=True, max_length=32, verbose_name='القسم/الجهة')),
                ('title', models.CharField(max_length=200, verbose_name='عنوان الطلب')),
                ('body', models.TextField(verbose_name='تفاصيل الطلب')),
                ('attachment', models.FileField(blank=True, null=True, upload_to='tickets/', validators=[django.core.validators.FileExtensionValidator(['pdf', 'jpg', 'jpeg', 'png', 'doc', 'docx'])], verbose_name='مرفق (اختياري)')),
                ('status', models.CharField(choices=[('new', 'جديد'), ('in_progress', 'قيد المعالجة'), ('done', 'تم الإنجاز'), ('rejected', 'مرفوض')], db_index=True, default='new', max_length=20, verbose_name='الحالة')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='تاريخ الإنشاء')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='تاريخ التحديث')),
                ('assignee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_tickets', to=settings.AUTH_USER_MODEL, verbose_name='المستلم')),
                ('requester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_tickets', to=settings.AUTH_USER_MODEL, verbose_name='صاحب الطلب')),
            ],
            options={
                'verbose_name': 'طلب (تراثي)',
                'verbose_name_plural': 'طلبات (تراثية)',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RequestLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('old_status', models.CharField(blank=True, choices=[('new', 'جديد'), ('in_progress', 'قيد المعالجة'), ('done', 'تم الإنجاز'), ('rejected', 'مرفوض')], max_length=20, verbose_name='الحالة القديمة')),
                ('new_status', models.CharField(blank=True, choices=[('new', 'جديد'), ('in_progress', 'قيد المعالجة'), ('done', 'تم الإنجاز'), ('rejected', 'مرفوض')], max_length=20, verbose_name='الحالة الجديدة')),
                ('note', models.TextField(blank=True, verbose_name='ملاحظة')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='وقت الإنشاء')),
                ('actor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='منفّذ العملية')),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='reports.requestticket', verbose_name='الطلب')),
            ],
            options={
                'verbose_name': 'سجل طلب (تراثي)',
                'verbose_name_plural': 'سجل الطلبات (تراثي)',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('teacher_name', models.CharField(blank=True, help_text='يُحفظ هنا الاسم الظاهر بغض النظر عن تغيّر اسم الحساب لاحقًا.', max_length=120, verbose_name='اسم المعلم (وقت الإنشاء)')),
                ('title', models.CharField(db_index=True, max_length=255, verbose_name='العنوان / البرنامج')),
                ('report_date', models.DateField(db_index=True, verbose_name='تاريخ التقرير / البرنامج')),
                ('day_name', models.CharField(blank=True, max_length=20, null=True, verbose_name='اليوم')),
                ('beneficiaries_count', models.PositiveIntegerField(blank=True, help_text='اتركه فارغًا إذا لا ينطبق', null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='عدد المستفيدين')),
                ('idea', models.TextField(blank=True, null=True, verbose_name='الوصف / فكرة التقرير')),
                ('image1', models.ImageField(blank=True, null=True, upload_to='reports/')),
                ('image2', models.ImageField(blank=True, null=True, upload_to='reports/')),
                ('image3', models.ImageField(blank=True, null=True, upload_to='reports/')),
                ('image4', models.ImageField(blank=True, null=True, upload_to='reports/')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='تاريخ الإنشاء')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='reports', to='reports.reporttype', verbose_name='التصنيف')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to=settings.AUTH_USER_MODEL, verbose_name='المعلم (حساب)')),
            ],
            options={
                'verbose_name': 'تقرير',
                'verbose_name_plural': 'التقارير',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DepartmentMembership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role_type', models.CharField(choices=[('teacher', 'Teacher'), ('officer', 'Officer')], default='teacher', max_length=16, verbose_name='نوع التكليف')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='memberships', to='reports.department', verbose_name='القسم')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dept_memberships', to=settings.AUTH_USER_MODEL, verbose_name='المعلم')),
            ],
            options={
                'verbose_name': 'تكليف قسم',
                'verbose_name_plural': 'تكليفات الأقسام',
            },
        ),
        migrations.AddField(
            model_name='teacher',
            name='role',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users', to='reports.role', verbose_name='الدور'),
        ),
        migrations.AddField(
            model_name='teacher',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.AddIndex(
            model_name='ticket',
            index=models.Index(fields=['department', 'status', 'created_at'], name='reports_tic_departm_5b9166_idx'),
        ),
        migrations.AddIndex(
            model_name='ticket',
            index=models.Index(fields=['assignee', 'status'], name='reports_tic_assigne_9effbd_idx'),
        ),
        migrations.AddIndex(
            model_name='requestticket',
            index=models.Index(fields=['department', 'status'], name='reports_req_departm_aa1920_idx'),
        ),
        migrations.AddIndex(
            model_name='requestticket',
            index=models.Index(fields=['assignee', 'status'], name='reports_req_assigne_14186d_idx'),
        ),
        migrations.AddIndex(
            model_name='report',
            index=models.Index(fields=['created_at'], name='reports_rep_created_a6aabf_idx'),
        ),
        migrations.AddIndex(
            model_name='report',
            index=models.Index(fields=['teacher', 'category'], name='reports_rep_teacher_fb6e0e_idx'),
        ),
        migrations.AddIndex(
            model_name='report',
            index=models.Index(fields=['report_date'], name='reports_rep_report__cd5337_idx'),
        ),
        migrations.AddIndex(
            model_name='departmentmembership',
            index=models.Index(fields=['department'], name='reports_dep_departm_3627f4_idx'),
        ),
        migrations.AddIndex(
            model_name='departmentmembership',
            index=models.Index(fields=['teacher'], name='reports_dep_teacher_ac8b99_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='departmentmembership',
            unique_together={('department', 'teacher')},
        ),
    ]
